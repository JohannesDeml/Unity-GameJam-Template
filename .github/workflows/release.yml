# Build the project by pushing tags
# Creates a release draft with all builds attached
name: Build project & release

on:
  push:
    tags:
      - '*'

jobs:
  variables:
    name: Define variables üîó
    runs-on: ubuntu-latest
    outputs:
      UNITY_VERSION: ${{ steps.set_unity_version.outputs.VERSION }}
      TAG: ${{ steps.set_tag.outputs.VERSION }}
      PRODUCT_NAME: ${{ steps.set_product_name.outputs.VERSION }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - name: Set unity version
        id: set_unity_version
        run: |
          UNITY_VERSION=$(sed -n 's/^\m_EditorVersion: //p'< ./ProjectSettings/ProjectVersion.txt)
          echo "VERSION=$UNITY_VERSION" >> $GITHUB_OUTPUT

      - name: Set tag
        id: set_tag
        run: echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT

      - name: Set product name
        id: set_product_name
        run: |
          PRODUCT_NAME=$(sed -n '/productName:/s/.*: \(.*\)/\1/p' < ./ProjectSettings/ProjectSettings.asset)
          echo "VERSION=$PRODUCT_NAME" >> $GITHUB_OUTPUT

      - name: Log variables
        run: |
          echo "UNITY_VERSION -> ${{ steps.set_unity_version.outputs.VERSION }}"
          echo "TAG -> ${{ steps.set_tag.outputs.VERSION }}"
          echo "PRODUCT_NAME -> ${{ steps.set_product_name.outputs.VERSION }}"

  buildProject:
    name: Create Unity Build for  ${{ matrix.targetPlatform }} üèó
    needs: [ variables ]
    runs-on: ubuntu-latest
    outputs:
      artifacts: ${{ matrix.targetPlatform }}
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          # comment out platforms you don't need by adding a # in front of the lines below
          - StandaloneWindows64
          - StandaloneOSX
          - StandaloneLinux64
          - WebGL
          - iOS
          - Android
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - uses: actions/cache@v4
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-${{ matrix.targetPlatform }}-
            Library-

      - if: matrix.targetPlatform == 'Android'
        uses: jlumbroso/free-disk-space@v1.3.0

      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          buildMethod: UnityBuilderAction.BuildScript.BuildWithCommandlineArgs
          customParameters: -tag ${{ needs.variables.outputs.TAG }}
          targetPlatform: ${{ matrix.targetPlatform }}
          buildName: ${{ needs.variables.outputs.PRODUCT_NAME }}-${{ needs.variables.outputs.TAG }}
          buildsPath: builds
          versioning: Tag

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.targetPlatform }}-${{ needs.variables.outputs.TAG }}
          path: builds

  createRelease:
    name: Create Github release üêô
    needs: [ variables, buildProject ]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: builds/

      - name: List all artifacts
        run: ls -R
        working-directory: builds/

      - name: Zip release
        run: zip -r AllBuilds-${{ needs.variables.outputs.TAG }}.zip builds

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: AllBuilds-${{ needs.variables.outputs.TAG }}.zip
          body: |
            ## ${{ needs.variables.outputs.TAG }}
          draft: true